/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Code.*;
import java.awt.Graphics;
import java.util.LinkedList;

/**
 *
 * @author 4NDR35
 */
public class Interface extends javax.swing.JPanel {

    private LinkedList<Point> point = new LinkedList<>();

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();

    }

    public void SetPoint(Point p) {

        getPoint().add(p);
        this.paintComponent(this.getGraphics());

    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (!point.isEmpty()) {
//        for (Point point1 : getPoint()) {
//            point1.draw(g);
//            g.drawLine(this.getX()+this.getWidth(), this.getY()+point1.getCoordy(), this.getX(),this.getY()+point1.getCoordy());
//        }
            point.get(0).draw(g);
            g.drawLine(this.getX() + this.getWidth(), this.getY() + point.get(0).getCoordy(), this.getX(), this.getY() + point.get(0).getCoordy());
            for (int i = 1; i < point.size(); i++) {

                if (point.get(i).getCut() == 1) {
                    point.get(i).draw(g);
                    g.drawLine(this.getX() + point.get(i).getCoordx(), this.getY() + this.getHeight(), this.getX() + point.get(i).getCoordx(), this.getY() + point.get(i - 1).getCoordy());
                }
                if (point.get(i).getCut() == 0) {
                    point.get(i).draw(g);
                    g.drawLine(this.getX(), point.get(i).getCoordy(), this.getX() + point.get(i - 1).getCoordx(), this.getY() + point.get(i).getCoordy());
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * @return the point
     */
    public LinkedList<Point> getPoint() {
        return point;
    }

    /**
     * @param point the point to set
     */
    public void setPoint(LinkedList<Point> point) {
        this.point = point;
    }

    /**
     * @return the Horizontal
     */
}
